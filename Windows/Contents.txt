
========
Contents
========

API folder
==========
API contains a complete prebuilt set of API components:

Always needed for any exe:
    + libgcc_s_seh-1.dll    // place in client exe directory
    + libstdc++-6.dll       // place in client exe directory
    + libwinpthread-1.dll   // place in client exe directory
    + SglxApi.dll           // place in client exe directory

Some of these needed depending upon language:
    + C_SglxApi.h           // add to project
    + libSglxApi.a          // add to project
    + SglxApi.h             // add to project
    + SglxCppClient.cpp     // add to project
    + SglxCppClient.h       // add to project

Build folder
============
Note: Building is optional: the API components are prebuilt.
Build contains the Qt project that generates API components as follows:

    + SglxApi.dll        // generated in API directory
    + libSglxApi.a       // generated in API directory
    + C_SglxApi.h        // copied from Build to API
    + SglxApi.h          // copied from Build to API
    + SglxCppClient.cpp  // copied from Build to API
    + SglxCppClient.h    // copied from Build to API

C folder
========
Tools to help build an ANSI C client:

    + CreateVisualStudioProject.txt
    + DemoRemoteAPI.c, .h
    + wp_ni_soft_start.c, .h
    + wp_soft_start.c, .h
    + wp_trig_start.c, .h

C# folder
=========
Tools to help build C# client:

    + CreateVisualStudioProject.txt
    + C_Sglx.cs
    + DemoRemoteAPI.cs
    + WavePlay.cs

CPP folder
==========
Tools to help build C++ client:

    + CreateVisualStudioProject.txt
    + DemoRemoteAPI.cpp, .h
    + wp_ni_soft_start.cpp, .h
    + wp_soft_start.cpp, .h
    + wp_trig_start.cpp, .h

Python folder
=============
Tools to help build Python client:

    + sglx_pkg:
        + __init__.py
        + sglx.py
    + DemoRemoteAPI.py
    + wp_ni_soft_start.py
    + wp_soft_start.py
    + wp_trig_start.py

IMPORTANT: Copy the 4 DLLs from the API folder to your sglx_pkg folder.

DeepPyProject
=============
Help with complex Python project file organization.

JWave folder
============
This is a waveform you can play with the wp_XXX scripts. Copy these files into the _Waves folder at the top level of your SpikeGLX folder.

Help docs
=========
- Contents.txt
- GettingStarted.txt
- General Docs/Help.txt
- General Docs/WhatsNew.txt


